import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;

public class Tasks extends Task {
	private int start;
	private int end;
	private ArrayList<Integer> generatedOddNumbers;
	
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		ArrayList<Tasks> tasks = new ArrayList<Tasks>();
	    int MaxValue = 50;
	    int lowVal = 0;
	    int ThreadLimit = 10;
	    int taskSizePerThread = 5;
	    int ThreadPoolLimit = 20;
	    ThreadPool threadPool = new ThreadPool(ThreadPoolLimit);
	    
	    //System.out.println(taskSizePerThread);
	    
	    int MaxUpperLimit = lowVal + taskSizePerThread;
	    while (MaxUpperLimit <= MaxValue) {
	    	Tasks task = new Tasks(lowVal, MaxUpperLimit - 1);
	      threadPool.execute(task);
	      tasks.add(task);
	      lowVal = MaxUpperLimit;
	      MaxUpperLimit = lowVal + taskSizePerThread;
	    }
	
	    threadPool.waitForAllTasks();
	    threadPool.shutdown();
	    scanner.close();
	  }
	
	// Constructor of the class
	public Tasks(int start, int end) {
		super("OddNumbersGeneration:" + start + "," + end+")");
		generatedOddNumbers = new ArrayList<Integer>();
		this.start = start;
		this.end = end;
	}
	

	// Method to Check if a number is prime or not
	
	public static boolean isOdd(int value) {
		if (value % 2 != 0) {
		return true;
		}
		else
		{
		return false;
		}
	}

	
	@Override
	public void run() {
		System.out.println("Task [" + this.getName() + "] starts running with " + Thread.currentThread().getName());
		
			for (int i = start; i <= end; ++i) {
				if (isOdd(i)) {
					generatedOddNumbers.add(i);
				}
			}
		
		
		System.out.println("Task [" + this.getName() + "] genereated the odd numbers " + Arrays.toString(generatedOddNumbers.toArray()) );
		System.out.println("Task [" + this.getName() + "] finished with " + generatedOddNumbers.size() + " odd numbers generated by " + Thread.currentThread().getName());
		try { 
            Thread.sleep(100); 
        } 
        catch (InterruptedException e) { 
            System.out.println("Caught:" + e); 
        }
		System.out.println(Thread.currentThread().getName() + " Stopped its execution.");
	
			
	}
	


	
	
}
